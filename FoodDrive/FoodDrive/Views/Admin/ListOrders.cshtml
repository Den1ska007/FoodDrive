@using FoodDrive.Entities
@using FoodDrive.Models
@model IEnumerable<Order>
<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-danger text-white">
            <!-- Залишаємо заголовок без змін -->
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-dark">
                        <!-- Залишаємо заголовки стовпців -->
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr data-status="@order.Status.ToString()">
                                <!-- Виправляємо статус для фільтрації -->
                                <td>#@order.Id</td>
                                <td>@(order.User?.Name ?? "Невідомий користувач")</td>
                                <td>
                                    <div class="d-flex flex-wrap gap-2">
                                        @foreach (var item in order.Items ?? Enumerable.Empty<OrderItem>())
                                        {
                                            var dishName = item.Dish?.Name ?? "Невизначена страва";
                                            <span class="badge bg-primary">@dishName</span>
                                        }
                                    </div>
                                </td>
                                <!-- Залишаємо інші стовпці без змін -->
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('statusFilter').addEventListener('change', function() {
        const status = this.value;
        document.querySelectorAll('tbody tr').forEach(row => {
            row.style.display = (!status || row.dataset.status === status) ? '' : 'none';
        });
    });
</script>

@functions {
    string GetStatusBadgeClass(Status status)
    {
        return status switch
        {
            Status.Pending => "bg-warning",
            Status.Completed => "bg-success",
            Status.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }
}