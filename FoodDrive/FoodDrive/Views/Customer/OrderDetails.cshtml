@using FoodDrive.Entities
@model FoodDrive.Entities.Order
@{
    ViewData["Title"] = $"Замовлення #{Model.Id}";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h3>
                <i class="fas fa-file-invoice me-2"></i>
                Деталі замовлення #@Model.Id
            </h3>
        </div>

        <div class="card-body">
            <!-- Інформація про замовлення -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <p><strong>Клієнт:</strong> @Model.User?.Name</p>
                    <p><strong>Дата:</strong> @Model.OrderDate.ToString("dd.MM.yyyy HH:mm")</p>
                </div>
                <div class="col-md-6">
                    <p>
                        <strong>Статус:</strong>
                        <span class="badge @GetStatusBadgeClass(Model.Status)">
                            @Model.Status
                        </span>
                    </p>
                    <p><strong>Сума:</strong> @Model.TotalPrice.ToString("C")</p>
                </div>
            </div>

            <!-- Список страв -->
            <h5 class="mb-3">Страви:</h5>
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Страва</th>
                            <th>Кількість</th>
                            <th>Ціна за одиницю</th>
                            <th>Сума</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>@item.Dish?.Name</td>
                                <td>@item.Quantity</td>
                                <td>@item.Dish?.Price.ToString("C")</td>
                                <td>@((item.Quantity * item.Dish?.Price ?? 0).ToString("C"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer d-flex justify-content-between">
            @if (Model.Status == Status.Pending || Model.Status == Status.InProgress)
            {
                <form asp-action="CancelOrder" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit"
                            class="btn btn-danger"
                            onclick="return confirm('Ви впевнені, що хочете скасувати це замовлення?')">
                        <i class="fas fa-ban me-2"></i> Скасувати замовлення
                    </button>
                </form>
            }
            <a asp-action="Orders" class="btn btn-secondary">
                <i class="fas fa-arrow-left me-2"></i>Назад до списку
            </a>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(Status status) => status switch
    {
        Status.Pending => "bg-warning",
        Status.InProgress => "bg-info",
        Status.Completed => "bg-success",
        Status.Cancelled => "bg-danger",
        _ => "bg-secondary"
    };
}